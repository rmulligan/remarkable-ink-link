name: CI

on:
  push:
    branches: [ main, 'feature/**' ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write

jobs:
  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry black==24.10.0 flake8
          poetry config virtualenvs.create true
          poetry install --no-interaction --no-ansi
      - name: Format with Black
        run: black .
      - name: Flake8
        run: flake8 .

  test:
    name: Run Tests
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create true
          poetry install --no-interaction --no-ansi
      - name: Run tests with coverage
        # invoke pytest via Poetry to ensure the virtualenv and devâ€‘dependencies are used
        run: poetry run pytest --maxfail=1 --disable-warnings -q
      - name: Report test coverage to DeepSource
        uses: deepsourcelabs/test-coverage-action@master
        with:
          key: python
          coverage-file: coverage.xml
          dsn: ${{ secrets.DEEPSOURCE_DSN }}

  code-review:
    name: Code Review GPT
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
      - name: Install Dependencies
        run: |
          poetry install --no-interaction --no-ansi
      - name: Code Review GPT
        uses: mattzcarey/shippie@v0.14.0
        env:
          NODE_OPTIONS: --max-old-space-size=4096

  build-and-push:
    name: Build and Push Docker Image
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push multi-arch image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKERHUB_REPO }}:latest