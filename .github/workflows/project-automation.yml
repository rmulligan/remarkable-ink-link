name: Auto Add to Kanban

on:
  workflow_dispatch:
  issues:
    types: [opened]
  pull_request:
    types: [opened, synchronize]

jobs:
  add-to-project:
    runs-on: ubuntu-latest
    # Removed job-level env for GH_TOKEN; set it in the relevant steps instead
    permissions:
      contents: read
      issues: write
      pull-requests: write
      # Note: Additional project-related permissions are granted via PAT_TOKEN

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: |
          type -p curl >/dev/null || sudo apt install curl -y
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y
        # No 'token' input; authentication is handled via GH_TOKEN env in later steps
      - name: Ensure gh-projects extension
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ! gh extension list | grep -q 'github/gh-projects'; then
            gh extension install github/gh-projects
          fi
      - name: Bootstrap Kanban project
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: bash scripts/manage_project.sh

      - name: Add new issue/PR to InkLink Kanban
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
          REPO: rmulligan/remarkable-ink-link
          OWNER: rmulligan
          PROJECT_NAME: InkLink Kanban
        run: |
          # Determine the URL and node ID of the new item (issue or PR)
          if [ "${{ github.event_name }}" = "issues" ]; then
            ITEM_URL="${{ github.event.issue.html_url }}"
            ITEM_ID="${{ github.event.issue.node_id }}"
          else
            ITEM_URL="${{ github.event.pull_request.html_url }}"
            ITEM_ID="${{ github.event.pull_request.node_id }}"
          fi

          # Use hard-coded project number 1 (known to exist)
          PROJ_NUM=1
          echo "Using known project number: $PROJ_NUM"
          
          # Try to add the item to the project, but don't fail if it doesn't work
          set +e  # Temporarily disable exit on error
          echo "Adding $ITEM_URL to project '$PROJECT_NAME' (number $PROJ_NUM)"
          gh project item-add --owner "$OWNER" --project-number "$PROJ_NUM" --id "$ITEM_ID" 2>/dev/null
          ADD_STATUS=$?
          
          if [ $ADD_STATUS -ne 0 ]; then
            echo "WARNING: Unable to add item to project. This may be due to permission issues with the GitHub token."
            echo "Ensure your PAT_TOKEN has the 'project' scope (classic token, not fine-grained)."
          else
            echo "Successfully added item to project '$PROJECT_NAME' (number $PROJ_NUM)"
          fi

          # Always exit successfully to avoid failing the workflow
          exit 0